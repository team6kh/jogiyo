<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>


<sqlMap namespace="Pay">

	<!--  결제내역 DTO -->
	<typeAlias alias="paidDTO" type="board.pay.dto.PaidDTO"/>
	<!--  인기메뉴 DTO -->
	<typeAlias alias="menuDTO" type="board.pay.dto.MenuDTO"/>
	<!--  검색 조건 파라미터 값 DTO -->
	<typeAlias alias="searchDTO" type="board.pay.dto.SearchConditionDTO"/>
      
      
      <resultMap class="paidDTO" id="paidRes">
	      <result property="rest_num" column="rest_num"/>
	      <result property="rest_writer_id" column="rest_writer_id"/>
	      <result property="paid_num" column="paid_num"/>
	      <result property="paid_rest_subject" column="paid_rest_subject"/>
	      <result property="paid_restopt_subject" column="paid_restopt_subject"/>
	      <result property="paid_restopt_priceplus" column="paid_restopt_priceplus"/>
	      <result property="session_id" column="session_id"/>
	      <result property="paid_reg_date" column="paid_reg_date"/>      	
      </resultMap> 
      
      <resultMap class="menuDTO" id="menuRes">	     
	      <result property="paid_restopt_subject" column="paid_restopt_subject"/>
	      <result property="paid_sales_volume" column="paid_sales_volume"/>
	      <result property="paid_sales_price" column="paid_sales_price"/>
         
      </resultMap>

    <!-- 공통 정의  -->

	<!-- rest_board 테이블(r)과 paid_board(p) join : r.rest_writer_id와 p.paid_rest_num 값이 필요한 경우  -->
	<sql id="fromRPBoard">
		from rest_board r,paid_board p
	</sql>
    <!-- 판매자와 매칭되는 식당코드 값을 찾기 위한 조건절 -->
	<sql id="whereRest">
    	where rest_writer_id = #session_id# and rest_num=paid_rest_num
    </sql>
    
    <!-- paid_board에서 일정한 기간의 결과값이 필요한 경우 : where, and, or등의 구문을 붙여서 사용할 것-->
    <!-- TO_DATE() : 문자열 형식을 Format에 맞은 DATE 타입으로 반환하는 날짜함수 -->
    <!--  + 0.99999는 해당 날짜의 23:59:59 까지 검색하기 위한 것 -->
    <sql id="paidDate">
        (paid_reg_date BETWEEN TO_DATE(#startDate#, 'yyyy-MM-dd') AND TO_DATE(#endDate#, 'yyyy-MM-dd')+0.99999) 
    </sql>
    
     <!--  SELECT  -->
    <!-- 해당 식당의 결제 내역 :  식당번호/판매자id/결제번호/식당명/메뉴명/메뉴가격/구매자id/주문결제일 값을 뽑아낸다.  -->
    <!-- startDay와 endDay 값을 넘겨 받아 일정 기간 내의 결제 내역만 뽑아낼 수 있다.  -->
    <select id="payList" resultMap="paidRes" parameterClass="searchDTO">
        SELECT 
			        	r.rest_num, 
			        	r.rest_writer_id, 
			        	p.paid_num, 
			        	p.paid_rest_subject,
			        	p.paid_restopt_subject,
			        	p.paid_restopt_priceplus,
			        	p.session_id,
			        	p.paid_reg_date 
        <include refid="fromRPBoard"/> 
        <include refid="whereRest"/> AND <include refid="paidDate"/>
        ORDER BY paid_reg_date DESC  	
    </select>
    
    <!-- 인기 메뉴 top 5개만 : 메뉴명/메뉴 매출건수(top5 선정 기준/메뉴 총매출금 값을 뽑아낸다-->
    <!-- startDay와 endDay 값을 넘겨 받아 일정 기간 내의 결과를 뽑아낼 수 있다.  -->
   <select id="hotmenu" resultMap="menuRes" parameterClass="searchDTO">          
        SELECT * FROM
  				(SELECT 
								paid_restopt_subject, 
								count(*) as paid_sales_volume, 
								sum(paid_restopt_priceplus) as paid_sales_price, 
								rownum as paid_rownum
  										
   				FROM 	paid_board 	
   				WHERE 	paid_rest_num = #rest_num# AND <include refid="paidDate"/> 
   				GROUP BY  paid_restopt_subject, rownum 
   				ORDER BY paid_sales_volume DESC) 

        WHERE  paid_rownum <![CDATA[>=]]> 1  AND paid_rownum <![CDATA[<=]]> 5
        		
   </select>
    
</sqlMap>